12: Using SSH blink led using rasberry Pi from remote system

import RPi.GPIO as GPIO
import time
GPIO.setmode(GPIO.BCM)
GPIO.setup(18, GPIO.OUT)
let = int(input('press a key'))
if let == 1:
GPIO.output(18,GPIO.HIGH)
time.sleep(1)
while(True):
let1=int(input())
if let1 == 0:
GPIO.output(18, GPIO.LOW)
break
GPIO.cleanup()

// ============================================================

3: Write a program to change the intensity of led using PWM_LED.c

#include <stdio.h>
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "DrvPWM.h"
#include "DrvADC.h"
#include "LCD_Driver.h"

int32_t main (void)
{
//char value[15];
int16_t x=0xffff;
UNLOCKREG();
SYSCLK->PWRCON.XTL12M_EN = 1; //Enable 12Mhz and set HCLK->12Mhz
SYSCLK->CLKSEL0.HCLK_S = 0;
LOCKREG();
InitPWM();
Initial_panel(); // initialize LCD pannel
clr_all_panel(); // clear LCD pan el
print_lcd(0,"variable reistor");
while(1)
{
PWMA->CMR0=x;
x = x - 1;
DrvSYS_Delay(500);
}
}

// =================================================

7: Smpl_GPIO_Buzzer.c using Interrupt

#include "NUC1xx.h"
#include "Driver\DrvUART.h"
#include "Driver\DrvGPIO.h"
#include "Driver\DrvSYS.h"
#include "LCD_Driver.h"

volatile uint32_t irqA_counter = 0;
void GPIOAB_INT_CallBack(uint32_t GPA_IntStatus, uint32_t GPB_IntStatus)
{
if ((GPA_IntStatus>>14) & 0x01) irqA_counter++;
print_lcd(3,"GPA interrupt !!");
}
void GPIOCDE_INT_CallBack(uint32_t GPC_IntStatus, uint32_t GPD_IntStatus, uint32_t
GPE_IntStatus)
{
if ((GPE_IntStatus>>10) & 0x01) {
DrvGPIO_ClrBit(E_GPB, 11);
DrvSYS_Delay(2000);
DrvGPIO_SetBit(E_GPB,11);
DrvSYS_Delay(2000);
}
print_lcd(3,"GPE interrupt !!");
}
int32_t main()
{
char TEXT[16];
UNLOCKREG();
DrvSYS_Open(48000000);
LOCKREG();
DrvGPIO_Open(E_GPA,14,E_IO_INPUT);
DrvGPIO_Open(E_GPE,10,E_IO_INPUT);
DrvGPIO_EnableInt(E_GPA, 14, E_IO_RISING, E_MODE_EDGE);
DrvGPIO_EnableInt(E_GPE, 10, E_IO_RISING, E_MODE_EDGE);
DrvGPIO_SetDebounceTime(5, 1);
DrvGPIO_EnableDebounce(E_GPA, 14);
DrvGPIO_EnableDebounce(E_GPE, 10);
DrvGPIO_SetIntCallback(GPIOAB_INT_CallBack, GPIOCDE_INT_CallBack);
Initial_panel();
clr_all_panel();
DrvGPIO_Open(E_GPB, 11, E_IO_OUTPUT);
DrvGPIO_SetBit(E_GPB,11);
print_lcd(0,"Interrupt");
while(1)
{
sprintf(TEXT,"IRQ_A: %d",irqA_counter);
print_lcd(1, TEXT);
}
}

// ===============================================

11: 11.Write a program to display 0 t0 9999 using 7 segment

#include <stdio.h>
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "Seven_Segment.h"
#include "DrvGPIO.h"
#include "DrvSYS.h"
void seg_display(int16_t value)
{
int8_t digit;
digit = value / 1000;
close_seven_segment();
show_seven_segment(3,digit);
DrvSYS_Delay(5000);
value = value - digit * 1000;
digit = value / 100;
close_seven_segment();
show_seven_segment(2,digit);
DrvSYS_Delay(5000);
value = value - digit * 100;
digit = value / 10;
close_seven_segment();
show_seven_segment(1,digit);
DrvSYS_Delay(5000);
value = value - digit * 10;
digit = value;
close_seven_segment();
show_seven_segment(0,digit);
DrvSYS_Delay(5000);
}
int32_t main (void)
{
char TEXT1[16];
int val;
val=0000;
UNLOCKREG();
DrvSYS_Open(48000000);
LOCKREG();
while(val<=2500)
{
DrvSYS_Delay(500);
seg_display(val);
val=val++ ;
}
}

//============================================

6: 6.Write a program to use Smpl_LCD_Text.c using Interrupt

#include <stdio.h>
#include "NUC1xx.h"
#include "Driver\DrvSYS.h"
#include "Driver\DrvGPIO.h"
#include "Driver\DrvADC.h"
#include "NUC1xx-LB_002\LCD_Driver.h"
#include "NUC1xx-LB_002\Seven_Segment.h"
void EINT1Callback()
{
Initial_panel(); // initialize LCD pannel
clr_all_panel(); // clear LCD panel
print_lcd(0,"String Display");
}
int main (void)
{
UNLOCKREG();
DrvSYS_Open(48000000);
LOCKREG();
DrvGPIO_Open(E_GPB, 15, E_IO_INPUT);
DrvGPIO_EnableEINT1(E_IO_BOTH_EDGE,E_MODE_EDGE,EINT1Callback);
while(1)
{

}

// ==============================================